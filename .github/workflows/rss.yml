name: Categorized RSS Alerts with Sentiment

on:
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils w3m jq

      - name: Download previous hashes (if any)
        uses: actions/download-artifact@v4
        with:
          name: rss-cache
          path: .cache
        continue-on-error: true

      - name: Create cache file if not exists
        run: mkdir -p .cache && touch .cache/sent_hashes.txt

      - name: Parse RSS Feeds and Post to Slack
        run: |
          FEEDS=(
            "https://feed.businesswire.com/rss/home/?rss=G1QFDERJXkJeEFpRXEMGSQ5SVFJUGExaFEhaUlJDFUkQUhFUUFNdGEU="
            "https://www.globenewswire.com/rssfeed/exchange/Nasdaq,NYSE"
          )

          declare -A WEBHOOKS
          WEBHOOKS[general]="${{ secrets.SLACK_WEBHOOK_GENERAL }}"
          WEBHOOKS[medical]="${{ secrets.SLACK_WEBHOOK_MEDICAL }}"
          WEBHOOKS[contracts]="${{ secrets.SLACK_WEBHOOK_CONTRACTS }}"

          for FEED_URL in "${FEEDS[@]}"; do
            echo "🔍 Checking Feed: $FEED_URL"
            XML=$(curl -s "$FEED_URL")

            for i in 1 2 3; do
              LINK=$(echo "$XML" | xmllint --xpath "string((//item|//entry)[$i]/link | (//item|//entry)[$i]/link/@href)" - 2>/dev/null)
              TITLE=$(echo "$XML" | xmllint --xpath "string((//item|//entry)[$i]/title)" - 2>/dev/null)
              DESCRIPTION=$(echo "$XML" | xmllint --xpath "string((//item|//entry)[$i]/description | //entry[$i]/summary)" - 2>/dev/null)
              PUBDATE=$(echo "$XML" | xmllint --xpath "string((//item|//entry)[$i]/pubDate | //entry[$i]/updated)" - 2>/dev/null)

              [ -z "$LINK" ] && continue
              [ -z "$TITLE" ] && TITLE="(No Title)"
              [ -z "$DESCRIPTION" ] && DESCRIPTION="(No summary available)"
              [ -z "$PUBDATE" ] && PUBDATE="(No date provided)"

              DESCRIPTION=$(echo "$DESCRIPTION" | w3m -dump -T text/html | head -c 300)
              CONTENT="$TITLE $DESCRIPTION"
              CONTENT_LOWER=$(echo "$CONTENT" | tr '[:upper:]' '[:lower:]')

              # 🔎 Categorize
              if echo "$CONTENT_LOWER" | grep -qE "positive topline|positive trial results|collaboration|funding"; then
                CATEGORY="medical"
              elif echo "$CONTENT_LOWER" | grep -qE "contract awarded|acquisition|investment|deal|strategic partnership"; then
                CATEGORY="contracts"
              else
                CATEGORY="general"
              fi

              # 😊 Sentiment
              if echo "$CONTENT_LOWER" | grep -qE "record|growth|surge|positive|expands|secured|approved|funding|investment|invests|acquire|acquired|launch|topline|announces|partnership"; then
                SENTIMENT=":large_green_circle: [POSITIVE]"
              elif echo "$CONTENT_LOWER" | grep -qE "layoff|lawsuit|delay|loss|drop|decline|recall|fails|resigns|investigation"; then
                SENTIMENT=":red_circle: [NEGATIVE]"
              else
                SENTIMENT=":white_circle: [NEUTRAL]"
              fi

              # 🔐 Deduplication
              HASH=$(echo "$LINK" | md5sum | cut -d ' ' -f 1)
              if grep -q "$HASH" .cache/sent_hashes.txt; then
                continue
              fi
              echo "$HASH" >> .cache/sent_hashes.txt

              # 🧱 Format Slack Message with real line breaks using jq-safe formatting
              TEXT=$(printf ":bell: *New Article:*\n%s *%s*\n:page_facing_up: %s\n:link: <%s|Read more>\n:clock3: *Posted:* %s\n───────────────" \
                "$SENTIMENT" "$TITLE" "$DESCRIPTION" "$LINK" "$PUBDATE")

              PAYLOAD=$(jq -n --arg text "$TEXT" \
                '{blocks: [ { type: "section", text: { type: "mrkdwn", text: $text } } ]}')

              echo "📤 Sending to Slack ($CATEGORY)..."
              curl -X POST "${WEBHOOKS[$CATEGORY]}" \
                -H 'Content-type: application/json' \
                --data "$PAYLOAD"
            done
          done

      - name: Upload updated hashes
        uses: actions/upload-artifact@v4
        with:
          name: rss-cache
          path: .cache/sent_hashes.txt
